@using Coevery.Core.Shapes.Localization
@using System.Globalization

@{
    
    // prevent the shape from being rendered twice in a page
    if (WorkContext.GetState<object>("DateTimePickerLocalization") != null) {
        return;
    }

    WorkContext.SetState("DateTimePickerLocalization", new object());

    var cultureInfo = CultureInfo.GetCultureInfo(WorkContext.CurrentCulture);

    var dateTimeLocalization = WorkContext.Resolve<IDateTimeLocalization>();
    var monthNames = FormatJsList(dateTimeLocalization.MonthNames.Text);
    var monthNamesShort = FormatJsList(dateTimeLocalization.MonthNamesShort.Text);
    var dayNames = FormatJsList(dateTimeLocalization.DayNames.Text);
    var dayNamesShort = FormatJsList(dateTimeLocalization.DayNamesShort.Text);
    var dayNamesMin = FormatJsList(dateTimeLocalization.DayNamesMin.Text);

    var dateTimeFormat = dateTimeLocalization.LongDateTimeFormat.Text;
}

@functions {

    private string FormatJsList(string csv) {
        return "'" + String.Join("', '", csv.Split(',').Select(x => HttpUtility.JavaScriptStringEncode(x.Trim()))) + "'";
    }

}
<script type="text/javascript">
//<![CDATA[
    $(function() {
        $.fn.datetimepicker.dates['localization'] = {
            days: [@Html.Raw(dayNames)],
            daysShort: [@Html.Raw(dayNamesShort)],
            daysMin: [@Html.Raw(dayNamesMin)],
            months: [@Html.Raw(monthNames)],
            monthsShort: [@Html.Raw(monthNamesShort)],
        };
        $.fn.datetimepicker.defaults.language = 'localization';
        $.fn.datetimepicker.defaults.format = '@HttpUtility.JavaScriptStringEncode(dateTimeFormat)';
        $.fn.datetimepicker.defaults.weekStart = @dateTimeLocalization.FirstDay;
        $.fn.datetimepicker.defaults.pickTime = true;
        $.fn.datetimepicker.defaults.pickSeconds = false;
        $.fn.datetimepicker.defaults.pick12HourFormat = true;
    })
//]]>
</script>