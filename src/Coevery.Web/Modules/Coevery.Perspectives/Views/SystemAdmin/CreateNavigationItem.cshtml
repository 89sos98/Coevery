@using System.ComponentModel
@using Coevery.Localization
@model Coevery.Perspectives.ViewModels.NavigationViewModel
@{
    var iconClass = string.IsNullOrWhiteSpace(Model.IconClass) ? null : Model.IconClass;
}
@helper DisplaySection(string labelClass, string divClass, LocalizedString displayName, HtmlString customElement) {
    <section class="data-row control-group">
        <label class="control-label @labelClass">@displayName</label>
        <div class="controls @divClass">
            @customElement
        </div>
    </section>
}

<header id="page-title">
    <h1 class="pull-left">@T("Navigation Item Detail") <span>show navigation item detail information</span></h1>
</header>

<section id="main-content" style="margin-top: 47px">
    <div id="page-actions" class="clearfix">
        <btn-actions>
            <button type="button" class="btn btn-small" data-ng-click="exit()">Back</button>
            <button type="button" class="btn btn-small btn-primary" data-cobusy="'savenavigationitem'" data-ng-click="saveAndView()">Save</button>
            <button class="btn btn-small btn-primary" data-cobusy="'savenavigationitem'" data-ng-click="saveAndBack()">Save & Back</button>
        </btn-actions>
    </div>

    <div class="row-fluid">
        <div class="span12">
            <div class="form-horizontal no-border">
                @using (Html.BeginFormAntiForgeryPost(Url.Action("CreateNavigationItem", new {perspectiveId = Model.PrespectiveId, navigationId = Model.NavigationId, type = Model.Type, ReturnUrl = Request.QueryString["ReturnUrl"]}),
                    FormMethod.Post,
                    new {@class = "form-horizontal edit-mode", @name = "myForm", @ng_submit = "save()"})) {
                    <fieldset>
                        <legend>General Information</legend>
                        @DisplaySection("", "", T("Title")
                            , Html.TextBoxFor(m => m.Title, new {@readonly = "readonly", @class = "span12"}))

                        @switch (Model.Type) {
                            case "MenuItem":
                                @DisplaySection("required", "errortips", T("Display Name")
                                    , Html.TextBoxFor(model => model.EntityName, new {@class = "span12", required = ""}))
                                @DisplaySection("required", "errortips", T("Url")
                                    , Html.TextBoxFor(model => model.Url, new {@class = "span12", required = ""}))
                                break;
                            default:
                                @DisplaySection("required", "errortips", T("Entity")
                                    , Html.DropDownList("EntityName", Model.Entities, new {id = "EntityName", required = ""}))

                                <section class="data-row control-group">
                                    <label class="control-label required">@T("Icon")</label>
                                    <div class="controls errortips">
                                        @*<input type="file" id="input04" data-provide="fileinput">*@
                                        <i id="showIconClass" class="@iconClass"></i>
                                        <button type="button" class="btn btn-small" data-ng-click="openDialog()">Select</button>
                                        @Html.HiddenFor(m => m.IconClass, new {id = "hfIconClass", required = ""})
                                    </div>
                                    <div modal="dialogSelectIcons" close="closeDialog()" options="opts" class="ng-cloak">
                                        @Html.Partial("SelectIconClass")
                                    </div>
                                </section>
                                break;
                        }

                        @DisplaySection("", "", T("Description")
                            , Html.TextBoxFor(m => m.Description, new {@class = "span12"}))
                        @DisplaySection("", "", T("Color")
                            , new HtmlString("<input id='color' type='text' class='minicolors'>"))
                    </fieldset>
                }
            </div>
        </div>
    </div>
</section>

