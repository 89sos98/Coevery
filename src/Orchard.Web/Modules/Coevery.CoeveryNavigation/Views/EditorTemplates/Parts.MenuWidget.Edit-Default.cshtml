@model Orchard.Core.Navigation.ViewModels.MenuWidgetViewModel
@using Orchard.ContentManagement
@using Orchard.Core.Navigation.Models;

<section class="control-group">
    @Html.LabelFor(m => m.CurrentMenuId, T("For Menu"), new { @class = "control-label" })
    <div class="controls">
        <select id="@Html.FieldIdFor(m => m.CurrentMenuId)" name="@Html.FieldNameFor(m => m.CurrentMenuId)">
            @foreach (ContentItem menu in Model.Menus)
            {
                @Html.SelectOption(Model.CurrentMenuId, menu.Id, Html.ItemDisplayText(menu).ToString())
            }
        </select>
    </div>
    <span class="hint">@T("Select which menu you want to display")</span>
</section>

<section class="control-group">
    <label class="control-label" for="@Html.FieldIdFor(m => m.StartLevel)">@T("Start Level")</label>
    <div class="controls">
        @Html.TextBoxFor(m => m.StartLevel, new { @class = "text text-small" })
    </div>
    <span class="hint">@T("The level the menu should start at.")</span>
</section>

<section class="control-group">
    <label class="control-label" for="@Html.FieldIdFor(m => m.StopLevel)">@T("Levels to display")</label>
    <div class="controls">
        @Html.TextBoxFor(m => m.StopLevel, new { @class = "text text-small" })
    </div>
    <span class="hint">@T("The number of levels to display, \"0\" meaning all levels.")</span>
</section>

<section class="control-group">
    <div class="controls">
        @Html.EditorFor(m => m.Breadcrumb)
    </div>
    <label class="control-label" for="@Html.FieldIdFor(m => m.Breadcrumb)">@T("Display as Breadcrumb")</label>
    <span class="hint">@T("Check to render the path to the current content item.")</span>
</section>

<div data-controllerid="@Html.FieldIdFor(m => m.Breadcrumb)">
    <section class="control-group">
        <div class="controls">
            @Html.EditorFor(m => m.AddHomePage)
        </div>
        <label class="control-label" for="@Html.FieldIdFor(m => m.AddHomePage)">@T("Add the home page as the first element")</label>
        <span class="hint">@T("Check to render the home page as the first element of the breadcrumb.")</span>
    </section>

    <section class="control-group">
        <div class="controls">
            @Html.EditorFor(m => m.AddCurrentPage)
        </div>
        <label class="control-label" for="@Html.FieldIdFor(m => m.AddCurrentPage)">@T("Add the current content item as the last element")</label>
        <span class="hint">@T("Check to render the current content item as the last element.")</span>
    </section>
</div>
