@using Orchard.ContentManagement
@using Orchard.Utility.Extensions
@{
    ContentItem contentItem = Model.ContentItem;
    var typeDisplayName = contentItem.TypeDefinition.DisplayName ?? contentItem.ContentType.CamelFriendly();
    var typeName = contentItem.TypeDefinition.Name;
}

<section ng-controller="GeneralDetailCtrl">
    <div id="page-actions">
        <button class="btn btn-small" ng-click="exit()">Back</button>
        <button class="btn btn-small btn-primary" ng-click="save()">Save</button>
    </div>

    <section id="main-content">
        <header id="page-title">
            <h1>{{moduleName}} <span>create a data</span></h1>
        </header>

        <div class="row-fluid">
            <section class="edit-mode span12">
                @using (Html.BeginFormAntiForgeryPost(Url.Action("Create", new { Id = typeName, ReturnUrl = Request.QueryString["ReturnUrl"] }),
                                                          FormMethod.Post, new { @class = "", @name = "myForm" })) {
                    @Html.ValidationSummary()
                    // Model is a Shape, calling Display() so that it is rendered using the most specific template for its Shape type


                    Output.Write(Model.Layout);
                }
            </section>
        </div>
    </section>
</section>
@Display(Model)

<script>
    $(function () {
        $('.page-actions').affix({ offset: { top: 71 } });
    });
</script>
