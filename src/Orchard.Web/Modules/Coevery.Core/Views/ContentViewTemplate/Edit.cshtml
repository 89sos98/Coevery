@using Orchard.ContentManagement
@using Orchard.Utility.Extensions

@{
    Script.Require("CommonContext");
    Script.Require("CommonDetailController");
}
@Display.FootScripts()

@{
    ContentItem contentItem = Model.ContentItem;
    var typeDisplayName = contentItem.TypeDefinition.DisplayName ?? contentItem.ContentType.CamelFriendly();
}

<header id="main-header" class="page-header">
    <ul class="breadcrumb">
        <li>
            <i class="icon-home"></i>Coevery
                                        <span class="divider">&raquo;</span>
        </li>
        <li>
            <a href="#">Sales</a>
            <span class="divider">&raquo;</span>
        </li>
        <li>
            <a href="#">@typeDisplayName</a>
        </li>
        <li>
            <a href="#">Detail</a>
        </li>
    </ul>
    <h1>@typeDisplayName Detail <span>@typeDisplayName edit</span></h1>
</header>
<section id="main-content">
    <div class="row-fluid">
        <section class="span12 widget">
            <section class="widget-content form-container">
                @using (Html.BeginFormAntiForgeryPost(Url.Action("Edit", new { ReturnUrl = Request.QueryString["ReturnUrl"] }),
                                                      FormMethod.Post, new { @class = "form-horizontal", @name = "myForm", @ng_submit = "save()", @ng_controller = "CommonDetailCtrl" }))
                {
                    @Html.ValidationSummary()
                    // Model is a Shape, calling Display() so that it is rendered using the most specific template for its Shape type
        
                    Output.Write(Model.Layout); 
                    <section class="form-actions">
                        <input type="submit" name="submit.Save" value="Save" class="btn btn-primary">
                        <input type="button" value="Exit" class="btn" ng-click="exit()" />
                    </section>
                }
            </section>
        </section>
    </div>
</section>
@Display(Model); 