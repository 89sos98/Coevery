@model Coevery.Entities.ViewModels.EditTypeViewModel
<div id="page-actions">
    <button type="button" class="btn btn-small" data-ng-click="exit()">Back</button>
    <button type="button" class="btn btn-small btn-primary" data-ng-click="save()">Save</button>
</div>
<header id="main-header" class="page-header" style="background-image: none; margin-bottom: 0; padding-top: 47px;">
    <h1 id="main-heading" style="background-image: none;">Meta Detail <span>Metadata add/edit</span></h1>
</header>

<section id="main-content">
    <div class="row-fluid">
        <div class="span12">
            <div class="form-horizontal">
                @using (Html.BeginFormAntiForgeryPost(Html.ViewContext.HttpContext.Request.Url.PathAndQuery, FormMethod.Post,
                                                              new { id = "myForm" }))
                {
                    @Html.ValidationSummary()
                    <section class="control-group">
                        <label class="control-label" for="DisplayName">@T("Display Name")</label>
                        <div class="controls toValidate">
                            @Html.TextBoxFor(m => m.DisplayName, new { @class = "span12 labelForName", autofocus = "autofocus" })
                        </div>
                    </section>
                    <section class="control-group">
                        <label class="control-label" for="Name">@T("Name")</label>
                        <div class="controls toValidate">
                            @Html.TextBoxFor(m => m.Name, new { @class = "span12 required safename", @id = "EntityName" })
                            <span class="help-block">@T("Technical name of the type.")</span>
                        </div>
                    </section>
                    <section class="control-group">
                        <label class="control-label">Setting</label>
                        <div class="controls">
                            @{Html.RenderTemplates(Model.Templates); }
                        </div>
                    </section>
                }
            </div>
        </div>
    </div>
</section>

<script type="text/javascript">
    $(function () {

        //Validation
        $.validator.addMethod("safename", function (value) {
            return (/^[A-Za-z]([0-9]|[-_]|[A-Za-z]){0,127}$/.test(value));
        }, "FieldName is not legal!");
        $.validator.classRuleSettings.safename = { safename: true };

        var validator = $("#myForm").validate({
            ignore: "*:not('.toValidate *')",
            onfocusout: function (element) {
                compute();
                if (element.type == "text") {
                    this.form();
                }
            },
        });

        //Auto get name
        var $name = $("#EntityName");
        var $displayName = $(".labelForName");
        var jsonUrl = "@Url.Action("EntityName", "SystemAdmin", new RouteValueDictionary { { "Area", "Coevery.Entities" } })";
        var version = 0;

        var nameAltered;
        $name.keyup(function () {
            if (!$name.val()) {
                nameAltered = false;
            } else {
                nameAltered = true;
            }      
        });

        var compute = function () {
            // stop processing automatically if altered by the user
            if (nameAltered) {
                return;
            }

            $.post(jsonUrl, {
                displayName: $displayName.val(),
                version: ++version,
                __RequestVerificationToken: $("input[name=__RequestVerificationToken]").val()
            },
                function (data) {
                    if (version == data.version) {
                        $name.val(data.result);
                    }
                },
                "json"
            );
        };

        //pull technical name input from tab order
        $name.attr("tabindex", -1);

        $displayName.keyup(function() {
            compute();
            validator.form();
        });

    });
</script>
