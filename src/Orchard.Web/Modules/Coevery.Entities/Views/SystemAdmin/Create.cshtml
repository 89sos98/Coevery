@model Coevery.Entities.ViewModels.EditTypeViewModel
<header id="main-header" class="page-header" style="background-image: none; margin-bottom: 0;">
    <h1 id="main-heading" style="background-image: none;">Meta Detail <span>Metadata add/edit</span></h1>
</header>

<section id="main-content">
    <div class="row-fluid">
        @using (Html.BeginFormAntiForgeryPost(Html.ViewContext.HttpContext.Request.Url.PathAndQuery, FormMethod.Post,
                                                  new { @class = "form-horizontal"})) {
            @Html.ValidationSummary()
            <section class="page-actions">
                <button class="btn btn-primary" data-ng-click="save()">Save</button>
                <button class="btn" data-ng-click="exit()">Back</button>
            </section>
            <section class="control-group">
                <label class="control-label" for="DisplayName">@T("Display Name")</label>
                <div class="controls">
                    @Html.TextBoxFor(m => m.DisplayName, new { @class = "span12" })
                    <span class="hint">@T("Content Type Id: {0}", Model.Name)</span>
                </div>
            </section>
            <section class="control-group">
                <label class="control-label" for="Name">@T("Content Type Id")</label>
                <div class="controls">
                    @Html.TextBoxFor(m => m.Name, new { @class = "span12" })
                    <span class="hint">@T("Technical name of the type.")</span>
                </div>
            </section>
            <section class="control-group">
                <label class="control-label">Setting</label>
                <div class="controls">
                    @{Html.RenderTemplates(Model.Templates); }
                </div>
            </section>
        }
    </div>
</section>

<script type="text/javascript">
    $(function () {
        $('.page-actions').affix({ offset: { top: 71 } });
    });
</script>

@using (Script.Foot()) {
    <script type="text/javascript">
        //<![CDATA[
        $(function () {
            var $name = $("#@Html.FieldIdFor(m => m.Name)");
            var $displayName = $("#@Html.FieldIdFor(m => m.DisplayName)");
            var jsonUrl = "@Url.Action("ContentTypeName", "Admin", new RouteValueDictionary { { "Area", "Orchard.ContentTypes" } })";
            var version = 0;

            var nameAltered;
            $name.keypress(function () {
                nameAltered = true;
            });

            var compute = function () {
                // stop processing automatically if altered by the user
                if (nameAltered) {
                    return true;
                }

                $.post(jsonUrl, {
                    displayName: $displayName.val(),
                    version: ++version,
                    __RequestVerificationToken: $("input[name=__RequestVerificationToken]").val()
                },
                    function (data) {
                        if (version == data.version) {
                            $name.val(data.result);
                        }
                    },
                    "json"
                );
            };

            //pull technical name input from tab order
            $name.attr("tabindex", -1);

            $displayName.keyup(compute);
            $displayName.blur(compute);
        })
        //]]>
    </script>
}