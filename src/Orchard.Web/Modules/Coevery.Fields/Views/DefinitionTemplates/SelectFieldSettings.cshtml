@model Coevery.Fields.Settings.SelectFieldSettings
@using Coevery.Fields.Settings;

@if (!Request.Url.ToString().Contains("/Fields/Edit"))
{
    <section class="control-group">
        <label class="control-label">
            Item Labels
        </label>
        <div class="controls">
            @Html.TextAreaFor(m => m.LabelsStr, new { @class = "span12 required" })
        </div>
    </section>
    
    <section class="control-group">
        <label class="control-label">
            Default Value
        </label>
        <div class="controls">
            @Html.TextBoxFor(d => d.DefaultValue, new { @class = "span12 digits" })
        </div>
    </section>
}

<section class="control-group">
    <label class="control-label">
        Select Count
    </label>
    <div class="controls">
        @Html.TextBoxFor(d => d.SelectCount, new { @class = "span12 digits" ,id="selectSelectCount"})
    </div>
</section>

<section class="control-group">
    <label class="control-label">
        Display Option
    </label>
    <div class="controls">
        @foreach (var displayOpt in Enum.GetValues(typeof(SelectionMode)).Cast<SelectionMode>())
        {
            string isChecked = (displayOpt == Model.DisplayOption) ? "checked" : null;
            <label class="radio">
                @Html.RadioButtonFor(m => m.DisplayOption, displayOpt, new { @class = "displayOption", isChecked })
                @T(displayOpt.ToString())
            </label>
        }
    </div>
</section>

<section class="control-group">
    <label class="control-label">
        Display Lines
    </label>
    <div class="controls">
        @Html.TextBoxFor(d => d.DisplayLines, new { @class = "span12 digits"})
    </div>
</section>

<script type="text/javascript">
    $(function () {
        var displayOpt = $("input.displayOption:checked").val();
        $("#selectSelectCount").attr("selectSetting", displayOpt);
        $("input.displayOption").click(function() {
            if ($(this).is(":checked")) {
                displayOpt = $(this).val();
                $("#selectSelectCount").attr("selectSetting", displayOpt);
            }
        });

        $.validator.addMethod("selectSetting", function (value, element, param) {
            if ((param == "@T(SelectionMode.Radiobutton.ToString())" && value == 1)
                || (param == "@T(SelectionMode.Checkbox.ToString())" && value > 1)
                || (param == "@T(SelectionMode.DropDown.ToString())" && value > 0)) {
                return true;
            } else {
                return false;
            }           
        }, "Wrong select setting!");
        $.validator.classRuleSettings.selectSetting = { selectSetting: true };
    });
</script>

