@model Coevery.Fields.Fields.CurrencyField
@using Orchard.Utility.Extensions;
@using Coevery.Fields.Settings;
@{
    var settings = Model.PartFieldDefinition.Settings.GetModel<CurrencyFieldSettings>();
    var required = settings.Required ? "required" : null;
    var maxLength = settings.Length + settings.DecimalPlaces + 1;
}

<label class="control-label title @required" for="@Html.FieldIdFor(m => m.Value)">@Model.DisplayName</label>
<div class="control controls">
    <input class="span12 number" type="text" 
           id="@Html.FieldIdFor(m => m.Value)" 
           name="@Html.FieldNameFor(m => m.Value)" 
           value="@Model.Value"
           decimalFormat = "@settings.Length,@settings.DecimalPlaces"
        @if (required != null)
        {<text> required data-msg-required="Please fill this field!"</text> }
        />
    @Html.ValidationMessageFor(m => m.Value)
</div>

<script>
    $(function() {
        $.validator.addMethod("decimalFormat", function (value, element, params) {
            var paramArray = params.split(',');
            var tempInt = parseInt(value);
            return !isNaN(tempInt) && tempInt.toString().length <= paramArray[0] &&
                RegExp("^(\\d{0," + paramArray[0] + "})(\.\\d{0," + paramArray[1] + "})?$").test(value);
        }, "Wrong decimal format!");
        $.validator.classRuleSettings.decimalFormat = { decimalFormat: true };
    });   
</script>
