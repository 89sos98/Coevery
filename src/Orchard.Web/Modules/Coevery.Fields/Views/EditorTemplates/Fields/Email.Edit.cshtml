@model Coevery.Fields.Fields.EmailField
@using Orchard.Utility.Extensions;
@using Coevery.Fields.Settings;
@{
    var settings = Model.PartFieldDefinition.Settings.GetModel<EmailFieldSettings>();
}


<label class="control-label @(settings.Required ? "required" : string.Empty)" for="@Html.FieldIdFor(m => m.Value)">@Model.DisplayName</label>
<div class="control controls relativeSetter">
    <input type="text" 
               id="@Html.FieldIdFor(m => m.Value)" 
               name="@Html.FieldNameFor(m => m.Value)"
               value="@Model.Value"
            @if (settings.Required) {<text> required="required"</text> }
            @if (settings.ReadOnly) {<text> readonly="readonly"</text> }
               class="textMedium span12 email" 
            @if (!string.IsNullOrWhiteSpace(settings.HelpText))
            {<text>rel="popover" data-html="true" data-placement="top" data-content="<p class='popoverTipContent'>@settings.HelpText</p>" 
            data-original-title="" </text>} />
    @if (!string.IsNullOrWhiteSpace(settings.HelpText))
    {
        <i class="icon-question-sign popoverTipIcon" id="popoverIcon" onmouseover="popShow(this)" onmouseout="hideShow(this)">
	    </i>
    }
    @Html.ValidationMessageFor(m => m.Value)
</div>
