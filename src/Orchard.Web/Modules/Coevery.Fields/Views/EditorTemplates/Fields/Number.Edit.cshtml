@model Coevery.Fields.Fields.NumberField
@using Orchard.Utility.Extensions;
@using Coevery.Fields.Settings;
@{
    var settings = Model.PartFieldDefinition.Settings.GetModel<NumberFieldSettings>();
    var decimalplacesclass = settings.DecimalPlaces > 0 ? "decimalplaces" : string.Empty;
}

<label class="control-label" for="@Html.FieldIdFor(m => m.Value)">@Model.DisplayName</label>
<div class="control controls relativeSetter">
    <input type="text" 
           id="@Html.FieldIdFor(m => m.Value)" 
           name="@Html.FieldNameFor(m => m.Value)"
           value="@Model.Value"
        @if (settings.Required) {<text> required="required"</text> }
        @if (settings.ReadOnly) {<text> readonly="readonly"</text> }
        @if (settings.Length > 1) {<text> maxlength="@settings.Length.ToString()"</text>} 
        @if (settings.DecimalPlaces > 0) {<text> decimalplaces = "@settings.DecimalPlaces" </text>}
           class="textMedium span12 number @decimalplacesclass" 
        @if (!string.IsNullOrWhiteSpace(settings.HelpText))
            {<text>rel="popover" data-html="true" data-placement="top" data-content="<p class='popoverTipContent'>@settings.HelpText</p>" 
            data-original-title="" </text>} 
        />
    @if (!string.IsNullOrWhiteSpace(settings.HelpText))
    {
        <i class="icon-question-sign popoverTipIcon" id="popoverIcon" onmouseover="popShow(this)" onmouseout="hideShow(this)">
	    </i>
    }
    @Html.ValidationMessageFor(m => m.Value)
</div>
