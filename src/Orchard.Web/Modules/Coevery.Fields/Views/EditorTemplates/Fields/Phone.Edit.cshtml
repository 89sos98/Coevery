@model Coevery.Fields.Fields.PhoneField
@using Orchard.Utility.Extensions;
@using Coevery.Fields.Settings;
@{
    var settings = Model.PartFieldDefinition.Settings.GetModel<PhoneFieldSettings>();
}


<label class="span3 title" for="@Html.FieldIdFor(m => m.Value)">@Model.DisplayName</label>
<div class="span9">
    <div class="control span12">
        <input type="@settings.Type.ToString().ToLower()" 
            id="@Html.FieldIdFor(m => m.Value)" 
            name="@Html.FieldNameFor(m => m.Value)"
            @if(!String.IsNullOrWhiteSpace(settings.Title)) 
                {<text> title="@settings.Title"</text>} 
            value="@Model.Value"
            @if(settings.Required) {<text> required="required"</text> }
            @if(settings.AutoFocus) {<text> autofocus="autofocus"</text> }
            @if(settings.AutoComplete) {<text> autocomplete="on"</text> }
            @if(!string.IsNullOrWhiteSpace(settings.Placeholder)) 
                {<text> placeholder="@settings.Placeholder"</text>}
            @if(!string.IsNullOrEmpty(settings.Pattern)) 
                {<text> pattern="@settings.Pattern"</text>}
            @if(!string.IsNullOrEmpty(settings.EditorCssClass)) 
                {<text> class="@settings.EditorCssClass span12"</text>} 
            else {<text> class="textMedium span12"</text>} />
        @Html.ValidationMessageFor(m => m.Value)
    </div>
</div>
