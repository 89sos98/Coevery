@model Coevery.Metadata.ViewModels.FormDesignerViewModel
@{
    Script.Require("jQuery");
    Script.Require("jQueryUI");
    Script.Require("angular");
    Script.Require("FormDesignerJsutils");
    Script.Require("FormDesignerLinq");
    Script.Require("FormDesignerContextMenu");
    Script.Require("FormDesignerMain");
    
    Style.Include("formdesigner/css/formdesigner.css");
}
<header id="main-header" class="page-header">
    <h1>Form Designer</h1>
</header>

<section id="main-content">
    <div class="row-fluid">
        <div id="form-designer" class="span8">
            <div fd-form></div>
            @Display(Model)
        </div>
        <div class="span4">
            <section id="toolboxes" class="widget">
                <header class="widget-header">
                    <span class="title">Tools</span>
                </header>
                <section class="widget-content form-container">
                    <fieldset>
                        <legend>Layout</legend>
                        <div fd-tools-section section-columns="1"></div>
                        <div fd-tools-section section-columns="2"></div>
                    </fieldset>
                    <fieldset>
                        <legend>Form Tools</legend>
                        @* <div fd-tools-control field-type="text" field-text ="Name"></div>
                        <div fd-tools-control field-type="radio" field-text ="Enable"></div>
                        <div fd-tools-control field-type="checkbox" field-text ="checkbox"></div>
                        <div fd-tools-control field-type="select" field-text ="select"></div>
                        <div fd-tools-control field-type="textarea" field-text ="textarea"></div>*@
                        @{
                            string filedFormat = "<div fd-tools-control field-type=\"{0}\" field-text =\"{1}\"></div>";
                            foreach (var filed in Model.ContentPart.PartDefinition.Fields)
                            {
                                string filedType = filed.FieldDefinition.Name;
                                string controlType = Model.GetControlType(filedType);
                                Output.Write(string.Format(filedFormat, controlType, filed.DisplayName));
                            }
                        }
                    </fieldset>
                </section>
            </section>
        </div>
    </div>
</section>
