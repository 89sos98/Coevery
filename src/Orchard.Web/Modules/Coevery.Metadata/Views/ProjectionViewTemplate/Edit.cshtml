@using System.ComponentModel
@model Coevery.Metadata.ViewModels.ProjectionEditViewModel

@{
    //Script.Require("jQuery");
    Script.Require("MetadataContext");
    Script.Require("UserViewDetailController");
    //Script.Require("jQueryUI");
    //Style.Require("ColumnSelector");
    Style.Require("jQueryUI_Orchard");
    Style.Include("formdesigner/css/columnselector.css");
}
@Display.FootScripts()
@Display.StylesheetLinks()


<header id="main-header" class="page-header">
    <ul class="breadcrumb">
        <li>
            <i class="icon-home"></i>Coevery
            <span class="divider">&raquo;</span>
        </li>
        <li>
            <a href="#">Admin</a>
            <span class="divider">&raquo;</span>
        </li>
        <li>
            <a href="#">UserView</a>
            <span class="divider">&raquo;</span>
        </li>
        <li>
            <a href="#">Create</a>
        </li>
    </ul>
    <h1>UserView Detail <span>UserView add</span></h1>
</header>
@{
    var sortedBy = new BindingList<SelectListItem>();
    sortedBy.Add(new SelectListItem{Selected = true,Text = "Name"});
    sortedBy.Add(new SelectListItem { Selected = false, Text = "Age" });

    var sortMode = new BindingList<SelectListItem>();
    sortMode.Add(new SelectListItem { Selected = true, Text = "Desc" });
    sortMode.Add(new SelectListItem { Selected = false, Text = "Asc" });
}

<section id="main-content" ng-controller="UserViewDetailCtrl">

    @using (Html.BeginFormAntiForgeryPost(Url.Action("Edit", new { subId = Model.Id, ReturnUrl = Request.QueryString["ReturnUrl"] }),
                FormMethod.Post,
                 new { @class = "form-horizontal", @name="myForm",@ng_submit="save()" }))
    {
        <div class="row-fluid">
            <section class="span12 widget">
                <header class="widget-header">
                    <span class="title">Create UserView</span>
                </header>
                <section class="widget-content form-container">
                    @Html.ValidationSummary()
                    <legend>General Info</legend>
                    <fieldset>
                        <section class="control-group ">
                            <div class="span6">
                                <label class="control-label " for="inputName">Name</label>
                                <div class="controls" >
                                    @Html.TextBoxFor(m => m.Name, new { @class = "span8",@disabled = "disabled"})
                                </div>
                            </div>
                            
                            <div class="span6">
                            <label class="control-label " for="inputName">DisplayName</label>
                            <div class="controls">
                                @Html.TextBoxFor(m => m.DisplayName, new { @class = "span8" })
                            </div>
                                </div>
                        </section>

                        <section class="control-group">
                            <div class="span6">
                                <label class="control-label" for="inputName">VisableTo</label>
                                <div class="controls">
                                    @Html.DropDownListFor(m => m.VisableTo,new BindingList<SelectListItem>() ,string.Empty, new { @class = "span8" })
                                </div>
                            </div>
                            
                            <div class="span6">
                            <label class="control-label" for="inputName">PageRowCount</label>
                            <div class="controls">
                                <input type="number" class="span4"/>
                            </div>
                                </div>
                        </section>
                    </fieldset>

                    <legend>Select Field To Display</legend>
                    <fieldset>
                        <div >
                            @*   <label class="control-label" for="picklist-ex">All Field</label>*@
                            <div >
                                <select id="picklist-ex" name="picklist">
                                    @{
                                        string optionTemp = "<option {1}>{0}</option>";
                                        Dictionary<string,bool> testData = new Dictionary<string, bool>();
                                        testData.Add("Field" + testData.Count.ToString(), true);
                                        testData.Add("Field" + testData.Count.ToString(), true);
                                        testData.Add("Field" + testData.Count.ToString(), false);
                                        testData.Add("Field" + testData.Count.ToString(), false);
                                        testData.Add("Field" + testData.Count.ToString(), false);
                                        foreach (var pair in testData)
                                        {
                                            string selectedDesc = string.Empty;
                                            bool selected = pair.Value;
                                            if (selected)
                                            {
                                                selectedDesc = "selected=\"selected\"";
                                            }
                                            Output.Write(string.Format(optionTemp, pair.Key, selectedDesc));
                                        }
                                        
                                    }
                                </select>
                            </div>
                        </div>
                    </fieldset>
                    <section class="control-group">
                        <div class="span6">
                            <label class="control-label " for="sortby">Sorted By</label>
                            <div class="controls">
                                @Html.DropDownListFor(m => m.SortedBy,sortedBy ,string.Empty, new { @class = "span4",@id ="sortby" })
                                @Html.DropDownListFor(m => m.SortMode,sortMode ,string.Empty, new { @class = "span4" })
                                <input type="button" class="btn" name="Preview" value="Preview" ng-click="preview()" />
                            </div>
                        </div>
                        <div class="span6" />
                    </section>
                 
                        <section class="gridStyle" ng-grid="gridOptions"></section>
                 

                    <section class="form-actions">
                        <input type="submit" value="Save" name="submit.Save" class="btn btn-primary">
                        <input type="button" value="Exit" class="btn" ng-click="exit()" />
                    </section>
                </section>
            </section>
        </div>
    }


</section>
<script type="text/javascript">
    //<![CDATA[
   var picklistobj = $('#picklist-ex').picklist({
        sourceListLabel: 'All Columns',
        targetListLabel: 'Drag and drop to reorder',
        addAllLabel:'Add AllColumns'
    });
    //]]>
</script>
