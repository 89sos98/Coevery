@using System.Web.Mvc
@using System.Web.Routing
@using Coevery.Relationship.Models
@using Coevery.Relationship.Records
@using System.Web.Mvc.Html
@model RelationshipViewModel<OneToManyRelationshipModel>

@{
    var isCreate = true;
}
    
@helper DisplayInput(string label, HtmlString input) {
    <section class="control-group">
        <label class="control-label">
            @label
        </label>
        <div class="controls">
            @input
        </div>
    </section>
}

<style>
    .pickList .btn [class^="icon-"] {
        width: auto;
    }
</style>
<header id="page-title">
    <h1 class="pull-left">"One to Many Relationship Detail " <span>show one to many relationship detail information</span></h1>
</header>

<section id="main-content" style="margin-top: 47px">
    <div class="row-fluid">
        @using (Html.BeginForm("EditOneToMany", "SystemAdmin", FormMethod.Post
                               , new { @class = "form-horizontal no-border form-fontstyle" })) {
            @Html.ValidationSummary()
            @Html.AntiForgeryToken()

            <div id="page-actions" class="clearfix">
                <btn-actions>
                    <button class="btn btn-small" data-ng-click="exit()">Back</button>
                    <button type="submit" value="Submit" class="btn btn-primary btn-small">Save</button>
                </btn-actions>
            </div>
            <fieldset>
                <legend>General Information</legend>
                                       
                @DisplayInput("Relationship Name"
                              , Html.TextBoxFor(model => model.RelationshipRecord.OneToManyRelationship.Relationship.Name
                                                , new { @class = "span12" }))
                    
                @DisplayInput("Primary Entity"
                              , Html.DropDownListFor(model => model.RelationshipRecord.OneToManyRelationship.Relationship.PrimaryEntityId
                                                     , Model.EntityList, new { @class = "span12" }))
                    
                @DisplayInput("Related Entity"
                              , Html.DropDownListFor(model => model.RelationshipRecord.OneToManyRelationship.Relationship.RelatedEntityId
                                                     , Model.EntityList, new { @class = "span12 related-entity" }))

                <section class="control-group">
                    <label class="control-label">
                        What to do if the lookup record is deleted?
                    </label>
                    <div class="controls">
                        <label class="radio">
                            <input type="radio" ng-model="recordDeleteBehavior" 
                                name="@Html.NameFor(model => model.RelationshipRecord.OneToManyRelationship.DeleteOption)"
                                   ng-disabled="required" value="@OneToManyDeleteOption.NoAction" />
                            Clear the value of this field
                        </label>
                        <label class="radio">
                            <input type="radio" ng-model="recordDeleteBehavior" 
                                name="@Html.NameFor(model => model.RelationshipRecord.OneToManyRelationship.DeleteOption)"
                                   value="@OneToManyDeleteOption.NotAllowed" />
                            Don't allow delete
                        </label>
                        <label class="radio">
                            <input type="radio" ng-model="recordDeleteBehavior" 
                                name="@Html.NameFor(model => model.RelationshipRecord.OneToManyRelationship.DeleteOption)"
                                   value="@OneToManyDeleteOption.CascadingDelete" />
                            Cascading delete
                        </label>
                    </div>
                </section>
            </fieldset>

            <fieldset>
                <legend>Related Entity Display Option</legend>
                
                @DisplayInput("Related Entity List Label"
                , Html.TextBoxFor(model => model.RelationshipRecord.OneToManyRelationship.RelatedListLabel
                , new { @class = "span12" }))

                
                <section class="control-group">
                    <div class="controls">
                        <label class="checkbox">
                            <input type="checkbox" ng-model="showRelatedList" value="true"
                                   name="@Html.NameFor(model => model.RelationshipRecord.OneToManyRelationship.ShowRelatedList)"/>
                            <input type="hidden" value="false" 
                                name="@Html.NameFor(model => model.RelationshipRecord.OneToManyRelationship.ShowRelatedList)"/>
                            Show Related Entity List in the Primary Entity's Detail Page
                        </label>
                    </div>
                </section>              

                <section class="control-group" ng-show="showRelatedList">
                    <div class="controls">
                        <select id="picklist-ex" name="@Html.NameFor(model => model.RelationshipRecord.ColumnFieldList)">
                        </select>
                    </div>
                </section>

            </fieldset>
            <fieldset>
                <legend>Lookup Field</legend>
                <section class="control-group">
                    <label class="control-label" for="fieldLabel">
                        Field Label
                    </label>
                    <div class="controls">
                        <input type="text" class="span12" id="fieldLabel" ng-model="fieldLabel">
                    </div>
                </section>
                <section class="control-group">
                    <label class="control-label" for="fieldName">
                        Field Name
                    </label>
                    <div class="controls">
                        <input type="text" class="span12" id="fieldName" ng-model="fieldName">
                    </div>
                </section>
                <section class="control-group">
                    <label class="control-label">
                        Options
                    </label>
                    <div class="controls">
                        <label class="checkbox">
                            <input type="checkbox" ng-model="required" />
                            Required
                        </label>
                        <label class="checkbox">
                            <input type="checkbox" ng-model="readonly" />
                            Read-Only
                        </label>
                        <label class="checkbox">
                            <input type="checkbox" ng-model="alwaysInLayout" />
                            Always In Layout
                        </label>
                    </div>
                </section>
                <section class="control-group">
                    <label class="control-label" for="helpText">
                        Help Text
                    </label>
                    <div class="controls">
                        <textarea class="span12" id="helpText" ng-model="helpText"></textarea>
                    </div>
                </section>
            </fieldset>
        }
    </div>
</section>

<script>
    $(document).ready(
        function () {           

            var jsonUrl = "@Url.Action("FieldNames", "SystemAdmin",new RouteValueDictionary { { "Area", "Coevery.Relationship" } })";
            var version = 0;
            var getFields = function (entityName,isInit) {
                if (!entityName) {
                    return;
                }

                $.post(jsonUrl, {
                    entityName: entityName,
                    version: ++version,
                    __RequestVerificationToken: $("input[name=__RequestVerificationToken]").val()
                },
                    function (data) {
                        if (version == data.version && data.result) {
                            if (!isInit) {
                                $('#picklist-ex').picklist("destroy");
                            }

                            $('#picklist-ex').html(data.result).picklist({
                                addAllLabel: '<i class="icon-caret-right"></i><i class="icon-caret-right"></i>',
                                addLabel: '<i class="icon-caret-right"></i>',
                                removeAllLabel: '<i class="icon-caret-left"></i><i class="icon-caret-left"></i>',
                                removeLabel: '<i class="icon-caret-left"></i>',
                                sourceListLabel: "Available Fields",
                                targetListLabel: "Selected Fields"
                            });
                        }
                    },
                    "json"
                );
            };

            getFields($("select.related-entity option:selected").val(),true);
           
            $("select.related-entity").change(function () {
                getFields($("select.related-entity option:selected").val(),false);
            });
        }
    );
</script>
