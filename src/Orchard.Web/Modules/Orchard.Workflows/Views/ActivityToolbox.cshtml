@using Orchard.DisplayManagement
@using Orchard.Utility.Extensions
@using Orchard.Workflows.Models.Descriptors
@using Orchard.Workflows.Services

@{
    IList<IActivity> allActivities = Model.AllActivities;
    
}
<!-- List of available activities -->
<div id="activity-toolbox">
    <ul>
        @foreach (var activity in allActivities) {
            <li class="activity-toolbox-item" data-activity-name="@activity.Name" title="@activity.Description">
                <h2>@activity.Name.CamelFriendly()</h2>
            </li>

            Style.Include("workflows-activity-" + activity.Name.ToLower());
        }   
    </ul> 
</div>

@* Render script to initialize a new jsplumb shape in the form of activities['activity-name'].create() *@
@using (Script.Foot()) {
    <script type="text/javascript">
        //<![CDATA[
        var activities = { @foreach (var activity in allActivities) { <text>
            '@activity.Name': {
                outcomes: [@Html.Raw(String.Join(",", activity.GetPossibleOutcomes(new ActivityContext()).Where(x => !String.IsNullOrEmpty(x.Text)).Select(x => "'" + HttpUtility.JavaScriptStringEncode(x.Text) + "'").ToArray()))],
                category: '@HttpUtility.JavaScriptStringEncode(activity.Category.Text)',
                description: '@HttpUtility.JavaScriptStringEncode(activity.Description.Text)',
                isBlocking: @(activity.IsBlocking ? "true" : "false"),
                hasForm: @(!String.IsNullOrWhiteSpace(activity.Form) ? "true" : "false")
            },</text> 
        }

        };
        //]]>
    </script>
}
