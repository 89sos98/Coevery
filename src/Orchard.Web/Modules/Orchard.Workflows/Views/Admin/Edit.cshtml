@model AdminEditViewModel
@using Orchard.Forms.Services
@using Orchard.Workflows.ViewModels;

@{
    Layout.Title = @T("Edit Workflow");
    Style.Include("admin-workflows.css");
    Script.Require("jQueryUI");
    Style.Require("jQueryUI_Orchard");
    Script.Include("jquery.jsPlumb-1.3.16-all-min.js");
    
    //        var editorShape = ((IShapeFactory)New).Create(activity.Name + "_Editor");
}

@Display.ActivityToolbox(Model)
@{
    Script.Include("orchard-workflows.js").AtFoot();
    Script.Include("orchard-workflows-serialize.js").AtFoot();
}

@using (Html.BeginFormAntiForgeryPost("Edit")) {
    @Html.ValidationSummary()

    <div id="activity-editor">
        <span id="activity-overlay">
            <input type="checkbox" id="initial-state" /><label for="initial-state">@T("Start")</label>
        </span>
    </div>

    
    using (Script.Head()) {
<script type="text/javascript">
    //<![CDATA[
    var renderActivityUrl = '@Url.Action("RenderActivity", "Admin", new { area = "Orchard.Workflows" })';
    var editActivityUrl = '@Url.Action("EditActivity", "Admin", new { area = "Orchard.Workflows" })';
    var requestAntiForgeryToken = '@Html.AntiForgeryTokenValueOrchard()';
    var localId = '@Model.LocalId';
    var updatedActivityClientId = null;
    var updatedActivityState = null;
    
    @if (TempData.ContainsKey("UpdatedViewModel")) {
        var model = TempData["UpdatedViewModel"] as UpdatedActivityModel;
        if (model != null) {
            <text>
    updatedActivityClientId = '@(model.ClientId)';
    updatedActivityState = '@Html.Raw(FormParametersHelper.ToJsonString(model.Data))';
            </text>
        }
    }
    else if (!Model.IsLocal) {
        <text>
    var state = @Html.Raw(Model.WorkflowDefinition.JsonData);
    sessionStorage.setItem(localId, JSON.stringify(state));
        </text>
    }
    
    //]]>
</script>
    }

@Html.Hidden("id", Model.WorkflowDefinition.Id)
@Html.Hidden("localId", Model.LocalId)
@Html.Hidden("data", String.Empty)

    using (Script.Foot()) {
<script type="text/javascript">
    //<![CDATA[
    $("form").submit(function () {
        saveLocal(localId);
        var workflow = loadWorkflow(localId);
        var data = JSON.stringify(workflow);
        $("[name='data']").val(data);
    });
    //]]>
</script>
    }

<fieldset>
    <button class="primaryAction" type="submit" name="submit.Save" value="@T("Save")">@T("Save")</button>
    <button class="cancel" type="submit" name="submit.Cancel" value="@T("Cancel")">@T("Cancel")</button>
</fieldset>
}
