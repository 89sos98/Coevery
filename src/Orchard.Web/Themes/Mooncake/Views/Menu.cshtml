@using System.Web.Routing;
@using Orchard.Mvc.Html
@using Orchard.Utility.Extensions;
@*<div class="btn-toolbar" id="FirstMenu"  style="border: 0; width: 100%; margin-top: 1px;height: 70px;  vertical-align: middle;">
    <div class="btn-group" style="border: 0; width: 100%; margin-top: 20px;">
        <button class="btn dropdown-toggle" data-toggle="dropdown" style="border: 0; background: rgb(252, 252, 252); width: 98%; height: 44px;">
            <i style="background-position: center;"></i><span id="FirstMenuText" style="font-size: 18px;">@foreach (var firstLevelMenuItem in Model) {@firstLevelMenuItem.Text break;}</span>
            <span class="caret"></span>
        </button>
        <hr style="height:2px; margin:0px;"/>
        <ul class="dropdown-menu">
            @foreach (var firstLevelMenuItem in Model)
            {
                <li title="@firstLevelMenuItem.Text" style="cursor:pointer; margin-left: 2px;padding: 3px 20px;">
                    <i style="background-position: center;"></i>
                    @firstLevelMenuItem.Text
                </li>
            }
        </ul>
    </div>
</div>*@
@{
    int firstLevelIndex = 0;
    foreach (var firstLevelMenuItem in Model) {
        IEnumerable<dynamic> secondLevelMenuItems = firstLevelMenuItem;
        string displayCss = "none";
        if (firstLevelIndex == 0) {displayCss = "block";}
        firstLevelIndex++;
        <ul class="menu"   id="@firstLevelMenuItem.Text" >
            @if (secondLevelMenuItems.Where(menuItem => !menuItem.LocalNav).Count() > 0 || !firstLevelMenuItem.LinkToFirstChild) {
                foreach (var secondLevelMenuItem in secondLevelMenuItems.Where(menuItem => !menuItem.LocalNav)) {
                    string secondLevelTextHint = secondLevelMenuItem.Text.TextHint;
                    var firstOfTheThird = ((IEnumerable<dynamic>) secondLevelMenuItem).FirstOrDefault();
                    var secondLevelUrl = secondLevelMenuItem.Href;
                    if (firstOfTheThird != null && secondLevelMenuItem.LinkToFirstChild && (firstOfTheThird.RouteValues != null || HasText(firstOfTheThird.Url))) {
                        secondLevelUrl = firstOfTheThird.Href;
                    }
                    var filePaht = System.AppDomain.CurrentDomain.BaseDirectory + "Themes\\Mooncake\\Styles\\Coevery\\images\\" + secondLevelMenuItem.Text + ".ico";
                    var backUrl = Href("~/Themes/Mooncake/Styles/Coevery/images/" + secondLevelMenuItem.Text + ".ico");
                    if (!File.Exists(filePaht))
                    {
                        backUrl = Href("~/Themes/Mooncake/Styles/Coevery/images/Home.ico");
                    }
                    <li data-ng-class="{active: $uiRoute}" data-ui-route="@secondLevelUrl">
                        <a href="@secondLevelUrl">
                            <i class="icon-home" 
                                   style="width: 32px; height: 32px; background-position: center; background-image: url(@backUrl);"></i>
                                @secondLevelMenuItem.Text
                        </a>
                    </li>
                }
            }
        </ul>
    }
}
@using (Script.Foot())
 {
    <script type="text/javascript">
        $(document).ready(function () {
            $("#FirstMenu .dropdown-menu>li").click(function () {
                var $li = $(this);
                var action = $li[0].title;
                $("#navigation .menu").css('display', 'none');
                $("#navigation #" + action).css('display', 'block');
                $("#FirstMenu .btn-group #FirstMenuText").text(action);
            });
        });
    </script>
 }
